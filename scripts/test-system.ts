#!/usr/bin/env bun
import { demonstrateCAGChain } from '../examples/demo.js'

console.log('üî¨ CAG-Chain System Test Runner')
console.log('===============================\n')

// –ü—Ä–æ–≤–µ—Ä–∫–∞ environment variables
const requiredEnvVars = ['OPENAI_API_KEY', 'DATABASE_URL', 'REDIS_URL']
const missingVars = requiredEnvVars.filter(varName => !process.env[varName])

if (missingVars.length > 0) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ environment variables:')
  missingVars.forEach(varName => {
    console.error(`   - ${varName}`)
  })
  console.error('\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env.template')
  process.exit(1)
}

console.log('‚úÖ Environment variables –≤ –ø–æ—Ä—è–¥–∫–µ')
console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã...\n')

try {
  await demonstrateCAGChain()
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
  process.exit(0)
} catch (error) {
  console.error('\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
  process.exit(1)
} 