#!/usr/bin/env bun

/**
 * CAG-Chains Production Guard System Demo
 * –ë–æ–µ–≤–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è PrecisionGuard —Å OpenAI API
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
import { config } from 'dotenv'
config()

import { PrecisionGuard } from '../packages/core/src/guard/PrecisionGuard.js'
import { systemVisualizer } from '../packages/core/src/visualization/SystemVisualizer.js'
import type { Task, A2AHeader } from '../packages/core/src/types/index.js'

console.log('üõ°Ô∏è CAG-Chains Production Guard System Demo')
console.log()
console.log('======================================================================')
console.log('–ë–æ–µ–≤–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è PrecisionGuard —Å OpenAI API')
console.log('======================================================================')
console.log()

async function runProductionGuardDemo() {
  console.log('üéØ –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–æ–¥—ã —Å A2A –∑–∞–≥–æ–ª–æ–≤–∫–æ–º...')
  console.log()

  // –°–æ–∑–¥–∞–µ–º A2A –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π frontend –Ω–æ–¥—ã
  const nodeHeader: A2AHeader = {
    nodeId: 'chain_frontend_expert_001',
    expertDomains: ['frontend', 'react', 'typescript', 'css'],
    competenceMap: {
      'frontend': 0.92,
      'react': 0.95,
      'typescript': 0.88,
      'css': 0.85
    },
    capabilities: ['component-creation', 'state-management', 'ui-design', 'styling'],
    contextHash: 'sha256:abc123def456gh789',
    guardThresholds: {
      minConfidence: 0.8,
      rejectBelow: 0.3
    },
    blockedAt: new Date(),
    version: '1.0.0'
  }

  console.log(`üîí –°–æ–∑–¥–∞–Ω A2A –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –Ω–æ–¥—ã: ${nodeHeader.nodeId}`)
  console.log(`   –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã: ${nodeHeader.expertDomains.join(', ')}`)
  console.log(`   –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏: ${JSON.stringify(nodeHeader.competenceMap, null, 2)}`)
  console.log(`   Guard –ø–æ—Ä–æ–≥–∏: min=${nodeHeader.guardThresholds.minConfidence}, reject=${nodeHeader.guardThresholds.rejectBelow}`)
  console.log()

  console.log('üõ°Ô∏è –≠—Ç–∞–ø 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PrecisionGuard...')
  console.log()

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ–µ–≤–æ–π Guard
  const guard = new PrecisionGuard(nodeHeader)
  
  console.log('‚úÖ PrecisionGuard –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
  const guardInfo = guard.getGuardInfo()
  console.log(`   –¢–∏–ø: AI-Powered Guard`)
  console.log(`   –ó–∞—â–∏—â–∞–µ—Ç –Ω–æ–¥—É: ${guardInfo.nodeId}`)
  console.log(`   –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${guardInfo.contextHash}`)
  console.log()

  console.log('üß™ –≠—Ç–∞–ø 3: –ü–æ–ª–Ω–∞—è –±–∞—Ç–∞—Ä–µ—è —Ç–µ—Å—Ç–æ–≤ Guard —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...')
  console.log()

  // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Guard –ª–æ–≥–∏–∫–∏
  const testTasks: { name: string, task: Task, expectedAction: string }[] = [
    {
      name: '–ü–û–ó–ò–¢–ò–í–ù–´–ô: –ü–æ–¥—Ö–æ–¥—è—â–∞—è React –∑–∞–¥–∞—á–∞',
      task: {
        id: 'task_001',
        type: 'frontend_development',
        description: '–°–æ–∑–¥–∞–π React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á —Å TypeScript —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π',
        requirements: {
          domains: ['frontend', 'react', 'typescript'],
          complexity: 4
        },
        dependencies: [],
        context: {},
        createdAt: new Date(),
        updatedAt: new Date()
      },
      expectedAction: 'allow'
    },
    {
      name: '–û–¢–ö–õ–û–ù–ï–ù–ò–ï: Backend –∑–∞–¥–∞—á–∞',
      task: {
        id: 'task_002',
        type: 'backend_development',
        description: '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π PostgreSQL –∑–∞–ø—Ä–æ—Å—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
        requirements: {
          domains: ['backend', 'database', 'postgresql'],
          complexity: 6
        },
        dependencies: [],
        context: {},
        createdAt: new Date(),
        updatedAt: new Date()
      },
      expectedAction: 'reject'
    },
    {
      name: '–ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï: –°–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞',
      task: {
        id: 'task_003',
        type: 'architecture',
        description: '–°–ø—Ä–æ–µ–∫—Ç–∏—Ä—É–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –¥–ª—è enterprise –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
        requirements: {
          domains: ['architecture', 'microservices', 'scalability'],
          complexity: 10
        },
        dependencies: [],
        context: {},
        createdAt: new Date(),
        updatedAt: new Date()
      },
      expectedAction: 'redirect'
    },
    {
      name: '–û–¢–ö–õ–û–ù–ï–ù–ò–ï: –ó–∞–¥–∞—á–∞ —Å –æ–±—É—á–µ–Ω–∏–µ–º',
      task: {
        id: 'task_004',
        type: 'learning',
        description: '–ò–∑—É—á–∏ –Ω–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ Svelte –∏ —Å–æ–∑–¥–∞–π —Å –Ω–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤',
        requirements: {
          domains: ['frontend', 'learning'],
          complexity: 5
        },
        dependencies: [],
        context: {},
        createdAt: new Date(),
        updatedAt: new Date()
      },
      expectedAction: 'reject'
    },
    {
      name: '–ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      task: {
        id: 'task_005',
        type: 'mobile_development',
        description: '–°–æ–∑–¥–∞–π –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Flutter —Å –∫—Ä–∞—Å–∏–≤—ã–º UI –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏',
        requirements: {
          domains: ['mobile', 'flutter'],
          complexity: 7
        },
        dependencies: [],
        context: {},
        createdAt: new Date(),
        updatedAt: new Date()
      },
      expectedAction: 'redirect'
    },
    {
      name: '–ü–û–ó–ò–¢–ò–í–ù–´–ô: CSS —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è',
      task: {
        id: 'task_006',
        type: 'frontend_styling',
        description: '–°–æ–∑–¥–∞–π –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é CSS —Å–µ—Ç–∫—É –¥–ª—è dashboard —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CSS Grid –∏ Flexbox',
        requirements: {
          domains: ['frontend', 'css'],
          complexity: 3
        },
        dependencies: [],
        context: {},
        createdAt: new Date(),
        updatedAt: new Date()
      },
      expectedAction: 'allow'
    }
  ]

  const results = []
  let successfulTests = 0

  for (let i = 0; i < testTasks.length; i++) {
    const { name, task, expectedAction } = testTasks[i]
    
    console.log(`üìã –¢–µ—Å—Ç ${i + 1}/${testTasks.length}: ${name}`)
    
    try {
      const decision = await guard.filterIncomingTask(task)
      
      const success = decision.action === expectedAction
      if (success) successfulTests++
      
      results.push({
        test: name,
        expected: expectedAction,
        actual: decision.action,
        success,
        confidence: decision.confidence,
        reasoning: decision.reasoning,
        cost: decision.cost,
        processingTime: decision.processingTime
      })

      // –õ–æ–≥–∏—Ä—É–µ–º –≤ —Å–∏—Å—Ç–µ–º—É –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
      systemVisualizer.logEvent({
        type: 'guard_check',
        nodeId: nodeHeader.nodeId,
        details: {
          taskId: task.id,
          decision: decision.action,
          confidence: decision.confidence,
          expected: expectedAction
        },
        performance: {
          duration: decision.processingTime,
          cost: decision.cost,
          success
        }
      })

      const status = success ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'
      console.log(`   ${status}: –†–µ–∑—É–ª—å—Ç–∞—Ç: ${decision.action} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${expectedAction})`)
      console.log(`   ü§ñ AI Confidence: ${(decision.confidence * 100).toFixed(1)}%`)
      console.log(`   üí≠ Reasoning: ${decision.reasoning.substring(0, 80)}...`)
      console.log(`   ‚ö° Time: ${decision.processingTime}ms, Cost: $${decision.cost.toFixed(6)}`)
      
      if (decision.suggestedNodeType) {
        console.log(`   üîÄ Suggested: ${decision.suggestedNodeType}`)
      }
      
    } catch (error) {
      console.log(`   ‚ùå –û–®–ò–ë–ö–ê: ${error}`)
      results.push({
        test: name,
        expected: expectedAction,
        actual: 'error',
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      })
    }
    
    console.log()
  }

  console.log('üìä –≠—Ç–∞–ø 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...')
  console.log()

  console.log('üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:')
  console.log(`   üìà –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successfulTests}/${testTasks.length} (${(successfulTests / testTasks.length * 100).toFixed(1)}%)`)
  console.log(`   üõ°Ô∏è Guard –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–¥–∞—á–∏`)
  
  const stats = guard.getUsageStats()
  console.log(`   ‚ö° –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ~${Math.round(stats.avgProcessingTime)}ms`)
  console.log(`   üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${stats.totalCost.toFixed(6)}`)
  console.log()

  console.log('üîç –≠—Ç–∞–ø 5: –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Guard...')
  console.log()

  console.log('üõ°Ô∏è Guard –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:')
  console.log(`   –¢–∏–ø: PrecisionGuard (AI-Powered)`)
  console.log(`   –ó–∞—â–∏—â–∞–µ–º–∞—è –Ω–æ–¥–∞: ${guardInfo.nodeId}`)
  console.log(`   –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã: [${guardInfo.expertDomains.join(', ')}]`)
  console.log(`   –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: [${guardInfo.capabilities.join(', ')}]`)
  console.log(`   –ü–æ—Ä–æ–≥–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: min_confidence=${guardInfo.thresholds.minConfidence}, reject_below=${guardInfo.thresholds.rejectBelow}`)
  console.log(`   –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${guardInfo.contextHash}`)
  console.log()

  // –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const dashboardData = systemVisualizer.generateDashboardData()
  console.log('üìà –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
  console.log(`   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–¥–∞—á: ${dashboardData.performanceMetrics.tasksProcessed}`)
  console.log(`   üí∞ –û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã: $${dashboardData.performanceMetrics.totalCost.toFixed(6)}`)
  console.log(`   üè• –ó–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã: ${dashboardData.systemOverview.systemHealth}%`)
  console.log()

  console.log('üéâ Production Guard –¥–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
  console.log()
  console.log('üìà –ö–ª—é—á–µ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:')
  console.log('   ‚úÖ PrecisionGuard –∏—Å–ø–æ–ª—å–∑—É–µ—Ç OpenAI GPT-4o-mini –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π')
  console.log('   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–æ–º–µ–Ω–∞–º, —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º')
  console.log('   ‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –Ω–æ–¥–∞–º')
  console.log('   ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–¥–∞—á —Å –æ–±—É—á–µ–Ω–∏–µ–º –∏ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π')
  console.log('   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')
  console.log('   ‚úÖ Real-time –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞')
  console.log()
  console.log('üí° Guard —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∑–∞—â–∏—â–∞—Ç—å –≤–∞—à–∏ Chain Nodes!')
}

// –ó–∞–ø—É—Å–∫ –±–æ–µ–≤–æ–≥–æ –¥–µ–º–æ
runProductionGuardDemo().catch(console.error) 